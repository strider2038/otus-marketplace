// Code generated by sqlc. DO NOT EDIT.

package database

import (
	"fmt"
	"time"

	"github.com/gofrs/uuid"
)

type PurchaseStatus string

const (
	PurchaseStatusPending          PurchaseStatus = "pending"
	PurchaseStatusCanceled         PurchaseStatus = "canceled"
	PurchaseStatusPaymentPending   PurchaseStatus = "paymentPending"
	PurchaseStatusPaymentSucceeded PurchaseStatus = "paymentSucceeded"
	PurchaseStatusPaymentFailed    PurchaseStatus = "paymentFailed"
	PurchaseStatusApproved         PurchaseStatus = "approved"
)

func (e *PurchaseStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = PurchaseStatus(s)
	case string:
		*e = PurchaseStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for PurchaseStatus: %T", src)
	}
	return nil
}

type SellStatus string

const (
	SellStatusPending        SellStatus = "pending"
	SellStatusCanceled       SellStatus = "canceled"
	SellStatusDealPending    SellStatus = "dealPending"
	SellStatusAccrualPending SellStatus = "accrualPending"
	SellStatusApproved       SellStatus = "approved"
)

func (e *SellStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = SellStatus(s)
	case string:
		*e = SellStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for SellStatus: %T", src)
	}
	return nil
}

type Item struct {
	ID                uuid.UUID
	Name              string
	InitialCount      int32
	InitialPrice      float64
	CommissionPercent float64
	CreatedAt         time.Time
}

type PurchaseOrder struct {
	ID         uuid.UUID
	UserID     uuid.UUID
	ItemID     uuid.UUID
	PaymentID  uuid.NullUUID
	DealID     uuid.NullUUID
	Price      float64
	Commission float64
	Status     PurchaseStatus
	CreatedAt  time.Time
	UpdatedAt  time.Time
}

type SellOrder struct {
	ID         uuid.UUID
	UserID     uuid.UUID
	ItemID     uuid.UUID
	UserItemID uuid.UUID
	AccrualID  uuid.NullUUID
	DealID     uuid.NullUUID
	Price      float64
	Commission float64
	Status     SellStatus
	CreatedAt  time.Time
	UpdatedAt  time.Time
}

type UserItem struct {
	ID        uuid.UUID
	ItemID    uuid.UUID
	UserID    uuid.UUID
	IsOnSale  bool
	CreatedAt time.Time
	UpdatedAt time.Time
}
