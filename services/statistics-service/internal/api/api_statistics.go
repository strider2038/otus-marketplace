/*
 * Public API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"net/http"
	"strings"
)

// A StatisticsApiController binds http requests to an api service and writes the service results to the http response
type StatisticsApiController struct {
	service StatisticsApiServicer
}

// NewStatisticsApiController creates a default api controller
func NewStatisticsApiController(s StatisticsApiServicer) Router {
	return &StatisticsApiController{service: s}
}

// Routes returns all of the api route for the StatisticsApiController
func (c *StatisticsApiController) Routes() Routes {
	return Routes{
		{
			"GetDailyStats",
			strings.ToUpper("Get"),
			"/api/v1/daily-stats",
			c.GetDailyStats,
		},
		{
			"GetTop10",
			strings.ToUpper("Get"),
			"/api/v1/top10",
			c.GetTop10,
		},
		{
			"GetTotalDailyStats",
			strings.ToUpper("Get"),
			"/api/v1/total-daily-stats",
			c.GetTotalDailyStats,
		},
	}
}

// GetDailyStats -
func (c *StatisticsApiController) GetDailyStats(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetDailyStats(r.Context())
	// If an error occured, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}

// GetTop10 -
func (c *StatisticsApiController) GetTop10(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetTop10(r.Context())
	// If an error occured, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}

// GetTotalDailyStats -
func (c *StatisticsApiController) GetTotalDailyStats(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetTotalDailyStats(r.Context())
	// If an error occured, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}
