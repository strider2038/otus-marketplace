/*
 * Public API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"context"
	"net/http"

	"statistics-service/internal/statistics"

	"github.com/pkg/errors"
)

// StatisticsApiService is a service that implents the logic for the StatisticsApiServicer
// This service should implement the business logic for every endpoint for the StatisticsApi API.
// Include any external packages or services that will be required by this service.
type StatisticsApiService struct {
	dailyDeals      statistics.DailyDealsRepository
	totalDailyDeals statistics.TotalDailyDealsRepository
	top10Deals      statistics.Top10DealsRepository
}

func NewStatisticsApiService(
	dailyDeals statistics.DailyDealsRepository,
	totalDailyDeals statistics.TotalDailyDealsRepository,
	top10Deals statistics.Top10DealsRepository,
) *StatisticsApiService {
	return &StatisticsApiService{
		dailyDeals:      dailyDeals,
		totalDailyDeals: totalDailyDeals,
		top10Deals:      top10Deals,
	}
}

// GetDailyStats -
func (s *StatisticsApiService) GetDailyStats(ctx context.Context) (ImplResponse, error) {
	deals, err := s.dailyDeals.FindForLastWeek(ctx)
	if err != nil {
		return Response(http.StatusInternalServerError, nil), errors.WithMessage(
			err,
			"failed to find daily deals",
		)
	}

	return Response(http.StatusOK, deals), nil
}

// GetTotalDailyStats -
func (s *StatisticsApiService) GetTotalDailyStats(ctx context.Context) (ImplResponse, error) {
	deals, err := s.totalDailyDeals.FindForLastWeek(ctx)
	if err != nil {
		return Response(http.StatusInternalServerError, nil), errors.WithMessage(
			err,
			"failed to find daily deals",
		)
	}

	return Response(http.StatusOK, deals), nil
}

// GetTop10 -
func (s *StatisticsApiService) GetTop10(ctx context.Context) (ImplResponse, error) {
	deals, err := s.top10Deals.FindTop10(ctx)
	if err != nil {
		return Response(http.StatusInternalServerError, nil), errors.WithMessage(
			err,
			"failed to find daily deals",
		)
	}

	return Response(http.StatusOK, deals), nil
}
