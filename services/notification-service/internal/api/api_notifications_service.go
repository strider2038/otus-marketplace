/*
 * Services API (hybrid variant)
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"context"
	"net/http"

	"notification-service/internal/notifications"

	"github.com/gofrs/uuid"
	"github.com/pkg/errors"
)

// NotificationsApiService is a service that implents the logic for the NotificationsApiServicer
// This service should implement the business logic for every endpoint for the NotificationsApi API.
// Include any external packages or services that will be required by this service.
type NotificationsApiService struct {
	notifications notifications.Repository
}

// NewNotificationsApiService creates a default api service
func NewNotificationsApiService(notifications notifications.Repository) NotificationsApiServicer {
	return &NotificationsApiService{notifications: notifications}
}

// GetNotifications -
func (s *NotificationsApiService) GetNotifications(ctx context.Context, userID uuid.UUID) (ImplResponse, error) {
	notifications, err := s.notifications.FindByUser(ctx, userID)
	if err != nil {
		return Response(http.StatusInternalServerError, nil), errors.WithMessagef(
			err,
			"failed to find notifications for user %s",
			userID,
		)
	}

	return Response(http.StatusOK, notifications), nil
}
